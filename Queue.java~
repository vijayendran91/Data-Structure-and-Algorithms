class Queue{
	
	int[] queue;
	int head,tail;
	public Queue(int size)
	{
		queue=new int[size];
		head=0;
		tail=0;
		queue[head]=0;	
			
	}


//************************** Enqueue Operation **********************//	

	public void enqueue(int value) throws QueueException
	{
		if(queue.length==tail)
		{
			throw new QueueException("***********Queue is Full**********");
		}
		if(queue.length==(tail-1))
		{
			queue[tail]=value;
		}
		else
		{
			queue[tail]=value;
			tail++;
		}
			
	}	

//************************** Dequeue Operation *********************//

	public void dequeue()
	{
		queue[head]=0;
		for(int i=0;i<(queue.length-1);i++)
		{
			queue[i]=queue[i+1];
			queue[i+1]=0;
		}				
		tail--;			
		

	}

	public int queueSize()
	{
		return queue.length;	
	}
	
	public int headValue()
	{
		return queue[head];
	}	


	public int tailValue()
	{
		return queue[tail];
	}	
	

	public int tailPosition()
	{
		return tail;
	}
	public void printQueue()
	{
		for(int temp:queue){		
		System.out.println(temp);}
	}	
	


}
